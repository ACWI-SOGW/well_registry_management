# The below suppresses pylint message: Module name "0004_lookup_tables" doesn't conform to snake_case naming style
# pylint: disable-msg=C0103
# Enable check for the rest of the file
# pylint: enable-msg=C0103
"""
# Data migration to create the lookup tables.
"""
# Generated by Django 3.0.7 on 2020-06-30 20:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    """
    Defines the migrations for creating look up tables.

    """

    dependencies = [
        ('registry', '0003_country_lookups'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyLookup',
            fields=[
                ('agency_cd', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('agency_nm', models.CharField(blank=True, max_length=150, null=True)),
                ('agency_med', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'agency',
            },
        ),
        migrations.CreateModel(
            name='AltitudeDatumLookup',
            fields=[
                ('adatum_cd', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('adatum_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'altitude_datum',
            },
        ),
        migrations.CreateModel(
            name='HorizontalDatumLookup',
            fields=[
                ('hdatum_cd', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('hdatum_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'horizontal_datum',
            },
        ),
        migrations.CreateModel(
            name='NatAqfrLookup',
            fields=[
                ('nat_aqfr_cd', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nat_aqfr_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nat_aqfr',
            },
        ),
        migrations.CreateModel(
            name='UnitsLookup',
            fields=[
                ('unit_id', models.FloatField(primary_key=True, serialize=False)),
                ('unit_desc', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'units',
            },
        ),
        migrations.AlterField(
            model_name='countrylookup',
            name='country_cd',
            field=models.CharField(max_length=2, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='countrylookup',
            name='country_nm',
            field=models.CharField(max_length=48),
        ),
        migrations.AlterField(
            model_name='registry',
            name='country_cd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registry.CountryLookup'),
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='country_cd',
            new_name='country',
        ),
        migrations.AlterModelTable(
            name='countrylookup',
            table='country',
        ),
        migrations.CreateModel(
            name='StateLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_cd', models.CharField(max_length=2)),
                ('state_nm', models.CharField(max_length=53)),
                ('country_cd', models.ForeignKey(db_column='country_cd',
                                                 on_delete=django.db.models.deletion.DO_NOTHING,
                                                 to='registry.CountryLookup')),
            ],
            options={
                'db_table': 'state',
                'unique_together': {('country_cd', 'state_cd')},
            },
        ),
        migrations.CreateModel(
            name='CountyLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('county_cd', models.CharField(max_length=3)),
                ('county_nm', models.CharField(max_length=48)),
                ('country_cd', models.ForeignKey(db_column='country_cd',
                                                 on_delete=django.db.models.deletion.DO_NOTHING,
                                                 to='registry.CountryLookup')),
                ('state_cd', models.ForeignKey(db_column='state_cd',
                                               on_delete=django.db.models.deletion.DO_NOTHING,
                                               to='registry.StateLookup')),
            ],
            options={
                'db_table': 'county',
                'unique_together': {('country_cd', 'state_cd', 'county_cd')},
            },
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='agency_cd',
            new_name='agency',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='alt_datum_cd',
            new_name='altitude_datum',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='alt_units',
            new_name='altitude_units',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='county_cd',
            new_name='county',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='horz_datum',
            new_name='horizontal_datum',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='nat_aquifer_cd',
            new_name='nat_aqfr',
        ),
        migrations.RenameField(
            model_name='registry',
            old_name='state_cd',
            new_name='state',
        ),
        migrations.AlterField(
            model_name='registry',
            name='well_depth_units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+',
                                    db_column='well_depth_units', to='registry.UnitsLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='agency',
            field=models.ForeignKey(db_column='agency_cd', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.AgencyLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='altitude_datum',
            field=models.ForeignKey(db_column='altitude_datum_cd', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.AltitudeDatumLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='altitude_units',
            field=models.ForeignKey(db_column='altitude_units', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.UnitsLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='country',
            field=models.ForeignKey(db_column='country_cd', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.CountryLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='county',
            field=models.ForeignKey(db_column='county_id', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.CountyLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='horizontal_datum',
            field=models.ForeignKey(db_column='horizontal_datum_cd', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.HorizontalDatumLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='nat_aqfr',
            field=models.ForeignKey(db_column='nat_aqfr_cd', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.NatAqfrLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='state',
            field=models.ForeignKey(db_column='state_id', on_delete=django.db.models.deletion.PROTECT,
                                    to='registry.StateLookup'),
        ),
    ]
