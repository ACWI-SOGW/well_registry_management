# The below suppresses pylint message: Module name "0005_lookups_fk" doesn't conform to snake_case naming style
# pylint: disable-msg=C0103
# Enable check for the rest of the file
# pylint: enable-msg=C0103
"""
# Changes to the Registry model
"""
# Generated by Django 3.0.8 on 2020-07-10 19:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    """
    Defines the migrations for updating the Registry model.
    """
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('registry', '0005_lookups_fk'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='registry',
            name='agency_med',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='agency_nm',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='aqfr_char',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='const_data_provider',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='data_provider',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='insert_user_id',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='lith_data_provider',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='local_aquifer_cd',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='nat_aqfr_desc',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='pk_siteid',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='qw_data_provider',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='qw_sys_name',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='review_flag',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='wl_data_provider',
        ),
        migrations.RemoveField(
            model_name='registry',
            name='wl_sys_name',
        ),
        migrations.AddField(
            model_name='registry',
            name='aqfr_type',
            field=models.CharField(blank=True, choices=[('CONFINED', 'Confined'), ('UNCONFINED', 'Unconfined')], db_column='aqfr_char', max_length=10),
        ),
        migrations.AddField(
            model_name='registry',
            name='insert_user',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registry',
            name='qw_network_name',
            field=models.CharField(blank=True, db_column='qw_sys_name', max_length=50),
        ),
        migrations.AddField(
            model_name='registry',
            name='update_user',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registry',
            name='wl_network_name',
            field=models.CharField(blank=True, db_column='wl_sys_name', max_length=50),
        ),
        migrations.AlterField(
            model_name='registry',
            name='alt_acy',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='registry',
            name='alt_method',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='registry',
            name='alt_va',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='altitude_datum',
            field=models.ForeignKey(blank=True, db_column='altitude_datum_cd', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.AltitudeDatumLookup', to_field='adatum_cd'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='altitude_units',
            field=models.ForeignKey(blank=True, db_column='altitude_units', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.UnitsLookup', to_field='unit_id'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='country',
            field=models.ForeignKey(blank=True, db_column='country_cd', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.CountryLookup', to_field='country_cd'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='county',
            field=models.ForeignKey(blank=True, db_column='county_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.CountyLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='dec_lat_va',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='dec_long_va',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='horizontal_datum',
            field=models.ForeignKey(blank=True, db_column='horizontal_datum_cd', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.HorizontalDatumLookup', to_field='hdatum_cd'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='horz_acy',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='registry',
            name='horz_method',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='registry',
            name='insert_date',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='link',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AlterField(
            model_name='registry',
            name='local_aquifer_name',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='registry',
            name='nat_aqfr',
            field=models.ForeignKey(blank=True, db_column='nat_aqfr_cd', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.NatAqfrLookup', to_field='nat_aqfr_cd'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='qw_well_chars',
            field=models.CharField(blank=True, choices=[('1', 'Background'), ('2', 'Suspected/Anticipated Changes'), ('3', 'Known Changes')], max_length=3),
        ),
        migrations.AlterField(
            model_name='registry',
            name='qw_well_purpose',
            field=models.CharField(blank=True, choices=[('1', 'Dedicated Monitoring/Observation'), ('2', 'Other')], max_length=15),
        ),
        migrations.AlterField(
            model_name='registry',
            name='qw_well_purpose_notes',
            field=models.CharField(blank=True, max_length=4000),
        ),
        migrations.AlterField(
            model_name='registry',
            name='qw_well_type',
            field=models.CharField(blank=True, choices=[('1', 'Surveillance'), ('2', 'Trend'), ('3', 'Special')], max_length=3),
        ),
        migrations.AlterField(
            model_name='registry',
            name='site_name',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='registry',
            name='site_type',
            field=models.CharField(blank=True, choices=[('WELL', 'Well'), ('SPRING', 'Spring')], max_length=10),
        ),
        migrations.AlterField(
            model_name='registry',
            name='state',
            field=models.ForeignKey(blank=True, db_column='state_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='registry.StateLookup'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='update_date',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='well_depth',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True),
        ),
        migrations.AlterField(
            model_name='registry',
            name='well_depth_units',
            field=models.ForeignKey(blank=True, db_column='well_depth_units', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='registry.UnitsLookup', to_field='unit_id'),
        ),
        migrations.AlterField(
            model_name='registry',
            name='wl_well_chars',
            field=models.CharField(blank=True, choices=[('1', 'Background'), ('2', 'Suspected/Anticipated Changes'), ('3', 'Known Changes')], max_length=3),
        ),
        migrations.AlterField(
            model_name='registry',
            name='wl_well_purpose',
            field=models.CharField(blank=True, choices=[('1', 'Dedicated Monitoring/Observation'), ('2', 'Other')], max_length=15),
        ),
        migrations.AlterField(
            model_name='registry',
            name='wl_well_purpose_notes',
            field=models.CharField(blank=True, max_length=4000),
        ),
        migrations.AlterField(
            model_name='registry',
            name='wl_well_type',
            field=models.CharField(blank=True, choices=[('1', 'Surveillance'), ('2', 'Trend'), ('3', 'Special')], max_length=3),
        ),
        migrations.AlterUniqueTogether(
            name='registry',
            unique_together={('site_no', 'agency')},
        ),
    ]
